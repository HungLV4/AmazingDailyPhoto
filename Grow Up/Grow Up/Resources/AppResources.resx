<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppBarButtonText" xml:space="preserve">
    <value>add</value>
  </data>
  <data name="AppBarMenuItemText" xml:space="preserve">
    <value>Menu Item</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>MY APPLICATION</value>
  </data>
  <data name="ClientId" xml:space="preserve">
    <value>000000004810A44B</value>
  </data>
  <data name="ResourceFlowDirection" xml:space="preserve">
    <value>LeftToRight</value>
    <comment>Controls the FlowDirection for all elements in the RootFrame. Set to the traditional direction of this resource file's language</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-US</value>
    <comment>Controls the Language and ensures that the font for all elements in the RootFrame aligns with the app's language. Set to the language code of this resource file's language.</comment>
  </data>
  <data name="TextID1" xml:space="preserve">
    <value>Search with #tag</value>
  </data>
  <data name="TextID10" xml:space="preserve">
    <value>technical support/feedback email</value>
  </data>
  <data name="TextID11" xml:space="preserve">
    <value>rate this app</value>
  </data>
  <data name="TextID12" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="TextID13" xml:space="preserve">
    <value>We respect your privacy. We may access your location just to provide you with more relevant places address. Your information will not be used for any other purposes.</value>
  </data>
  <data name="TextID14" xml:space="preserve">
    <value>Select other app as lockscreen provider</value>
  </data>
  <data name="TextID15" xml:space="preserve">
    <value>Select month and background</value>
  </data>
  <data name="TextID16" xml:space="preserve">
    <value>Would you allow the application to use your GPS position?</value>
  </data>
  <data name="TextID17" xml:space="preserve">
    <value>Network is not avaiable</value>
  </data>
  <data name="TextID18" xml:space="preserve">
    <value>Location service is not avaiable.</value>
  </data>
  <data name="TextID19" xml:space="preserve">
    <value>Image is saved to camera roll</value>
  </data>
  <data name="TextID2" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="TextID20" xml:space="preserve">
    <value>Thank you for using Amazing Daily Photo for a while now, would you like to review this app?</value>
  </data>
  <data name="TextID21" xml:space="preserve">
    <value>Please review my app</value>
  </data>
  <data name="TextID22" xml:space="preserve">
    <value>These themes are not available for trial mode. Would you like to purchase?</value>
  </data>
  <data name="TextID23" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="TextID24" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="TextID25" xml:space="preserve">
    <value>Display in calendar</value>
  </data>
  <data name="TextID26" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="TextID27" xml:space="preserve">
    <value>Add #tag</value>
  </data>
  <data name="TextID28" xml:space="preserve">
    <value>Add location</value>
  </data>
  <data name="TextID29" xml:space="preserve">
    <value>Upload to cloud</value>
  </data>
  <data name="TextID3" xml:space="preserve">
    <value>Generate calendar</value>
  </data>
  <data name="TextID30" xml:space="preserve">
    <value>Select photos to upload</value>
  </data>
  <data name="TextID31" xml:space="preserve">
    <value>Unable to connect Skydrive</value>
  </data>
  <data name="TextID32" xml:space="preserve">
    <value>Unable to create Amazing Daily Photo folder in Skydrive</value>
  </data>
  <data name="TextID33" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="TextID34" xml:space="preserve">
    <value>Unselect all</value>
  </data>
  <data name="TextID4" xml:space="preserve">
    <value>Add filter</value>
  </data>
  <data name="TextID5" xml:space="preserve">
    <value>Add caption</value>
  </data>
  <data name="TextID6" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="TextID7" xml:space="preserve">
    <value>settings</value>
  </data>
  <data name="TextID8" xml:space="preserve">
    <value>about</value>
  </data>
  <data name="TextID9" xml:space="preserve">
    <value>With Amazing Daily Photo, never miss any important event of your life!</value>
  </data>
</root>